@page
@using Domain
@using GameUI
@model Player1AttackResultModel
@{
    ViewData["Title"] = "Player 1 attack result";
}
<body>

@if (ObjectHolderForWebApp.GameBoard.hitOrMiss == BoardSquareState.Hit)
{
    <h3>Hit!</h3>
}
else
{
    <h3>Miss!</h3>
}


@if (ObjectHolderForWebApp.GameBoard.shipSquareCount == 0)
{
ObjectHolderForWebApp.ContinuePlaying = false;
<h3>Congratulations! Player 1 won!</h3>

}

<h3>Player 1 enemy ships table</h3>
<table style="border: 1px solid black">
    <tr>
        <td style="border: 1px solid black"> </td>
        @for (int a = 0; a < GameUI.ObjectHolderForWebApp.GameBoard.Player1Board2[0].Count; a++)
        {
            <td style="border: 1px solid black">@GameUI.ObjectHolderForWebApp.GameBoard.Alphabet[a]</td>
        }
    </tr>
    @for (int i = 0; i < GameUI.ObjectHolderForWebApp.GameBoard.Player1Board2.Count; i++)
    {
        <tr>
            <td style="border: 1px solid black">@(i + 1)</td>

            @for (int j = 0; j < GameUI.ObjectHolderForWebApp.GameBoard.Player1Board2[i].Count; j++)
            {
                switch (GameUI.ObjectHolderForWebApp.GameBoard.Player1Board2[i][j])
                {
                    case BoardSquareState.Empty:
                        <td style="border: 1px solid black; width: 50px; height: 50px"> </td>
                        break;
                    case BoardSquareState.Unknown:
                        <td style="border: 1px solid black; width: 50px; height: 50px">-</td>
                        break;
                    case BoardSquareState.Ship:
                        <td style="border: 1px solid black; width: 50px; height: 50px">+</td>
                        break;
                    case BoardSquareState.Hit:
                        <td style="border: 1px solid black; width: 50px; height: 50px">X</td>
                        break;
                    case BoardSquareState.Miss:
                        <td style="border: 1px solid black; width: 50px; height: 50px">0</td>
                        break;

                    default:
                        throw new ArgumentOutOfRangeException();
                }
            }
        </tr>
    }
</table>



@if (ObjectHolderForWebApp.GameBoard.shipSquareCount == 0)
{
    <form method="post">
        <fieldset>
            <div>
                <label>&nbsp;</label>
                <input type="submit" value="Start new game" class="start_new"/>
            </div>
        </fieldset>
    </form>

}

else {
    <form method="post">
        <fieldset>
            <div>
                <label>&nbsp;</label>
                <input type="submit" value="Continue" class="continue"/>
            </div>
        </fieldset>
    </form>
}
</body>
